#!/usr/bin/env node

function read(file) {
	let content = require('fs').readFileSync(file, 'utf8')
	return content.split('\n').filter(Boolean).map(Number)
}

function log(...args) {
	console.log(...args)
}

let day = process.argv[1].substr(-1)
// let numbers = read(`${day}-test`)
// let N = 5
let numbers = read(`${day}-input`)
let N = 25

// log(numbers)

// sums[i] is set of preamble sums for position i + N
let sums = []


for (let i = 0; i < numbers.length - N; i++) {
	sums[i] = new Set()
	for (let j = 0; j < N; j++) {
		for (let k = 0; k < N; k++) {
			if (j !== k) {
				sums[i].add(numbers[i + j] + numbers[i + k])
			}
		}
	}
}

let target

for (let i = N; i < numbers.length; i++) {
	if (sums[i - N].has(numbers[i])) {
		// ok
	} else {
		log('not ok', numbers[i])
		target = numbers[i]
	}
}

for (let i = 0; i < numbers.length; i++) {
	let sum = 0
	for (let j = i; j < numbers.length; j++) {
		sum += numbers[j]
		if (sum === target) {
			log('found sum', { i, j })
			log('found sum', numbers[i] + numbers[j])
			let slice = numbers.slice(i, j + 1)
			let min = Math.min(...slice)
			let max = Math.max(...slice)
			log('sum', min, max, min + max)
			// 15538721 too low!
		}
	}
}

// log(sums)

